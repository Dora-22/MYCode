import React, { useState } from 'react';
import { Container, Row, Col, Form, Button, ListGroup, Navbar } from 'react-bootstrap';
import 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS

function App() {
  // State to hold the current value of the input field
  const [newTask, setNewTask] = useState('');
  // State to hold the list of to-do items
  const [todos, setTodos] = useState([]);
  // State for user feedback messages (e.g., for validation)
  const [feedbackMessage, setFeedbackMessage] = useState('');

  /**
   * Handles changes in the input field.
   * Updates the 'newTask' state and clears any feedback message.
   * @param {Object} e - The event object from the input change.
   */
  const handleInputChange = (e) => {
    setNewTask(e.target.value);
    setFeedbackMessage(''); // Clear feedback when user starts typing
  };

  /**
   * Handles adding a new task to the to-do list.
   * Performs validation to ensure the task is not empty or just whitespace.
   */
  const handleAddTask = () => {
    const trimmedTask = newTask.trim();

    // Validation: Check if the trimmed task is empty
    if (!trimmedTask) {
      setFeedbackMessage('Task title cannot be empty!');
      return; // Stop the function if validation fails
    }

    // Add the new task to the 'todos' array
    // Each task is an object with a unique ID and the title
    setTodos([...todos, { id: Date.now(), title: trimmedTask }]);
    setNewTask(''); // Clear the input field after adding the task
    setFeedbackMessage(''); // Clear any previous feedback message
  };

  /**
   * Handles deleting a task from the to-do list.
   * Filters out the task with the given ID from the 'todos' state.
   * @param {number} id - The unique ID of the task to be deleted.
   */
  const handleDeleteTask = (id) => {
    setTodos(todos.filter(todo => todo.id !== id));
  };

  return (
    <div className="bg-light min-vh-100 d-flex flex-column">
      {/* Navbar Heading */}
      <Navbar bg="dark" variant="dark" expand="lg" className="mb-4">
        <Container>
          <Navbar.Brand href="#">My To-Do List</Navbar.Brand>
        </Container>
      </Navbar>

      <Container className="my-4 flex-grow-1">
        <Row className="justify-content-center">
          <Col md={8} lg={6}>
            <div className="bg-white p-4 rounded shadow-sm">
              <h2 className="text-center mb-4">Add New Task</h2>
              <Form.Group className="mb-3">
                <Form.Control
                  type="text"
                  value={newTask}
                  onChange={handleInputChange}
                  placeholder="Enter a new task..."
                  aria-label="New task title"
                  onKeyPress={(e) => {
                    // Allow pressing Enter key to add task
                    if (e.key === 'Enter') {
                      handleAddTask();
                    }
                  }}
                />
              </Form.Group>
              <div className="d-grid gap-2 mb-3">
                <Button variant="primary" onClick={handleAddTask}>
                  Add Task
                </Button>
              </div>

              {/* Display feedback message if present */}
              {feedbackMessage && (
                <p className="text-danger text-center mt-2">
                  {feedbackMessage}
                </p>
              )}

              <hr className="my-4" />

              {/* To-Do List Display */}
              <h2 className="mb-3">Tasks</h2>
              {todos.length > 0 ? (
                <ListGroup>
                  {todos.map((todo) => (
                    <ListGroup.Item
                      key={todo.id} // Unique key for each list item for React's reconciliation
                      className="d-flex justify-content-between align-items-center"
                    >
                      <span>{todo.title}</span>
                      <Button
                        variant="danger"
                        size="sm"
                        onClick={() => handleDeleteTask(todo.id)}
                        aria-label={`Delete task: ${todo.title}`}
                      >
                        Delete
                      </Button>
                    </ListGroup.Item>
                  ))}
                </ListGroup>
              ) : (
                <p className="text-center text-muted mt-4">
                  No tasks yet! Add some above.
                </p>
              )}
            </div>
          </Col>
        </Row>
      </Container>
    </div>
  );
}

export default App;
