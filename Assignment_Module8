import React, { createContext, useReducer } from 'react';
import { cartReducer, defaultCartState } from './cart-reducer'; // Import the reducer logic

// Create the Cart Context
export const CartContext = createContext({
  items: [],
  totalAmount: 0,
  addItem: (item) => {},
  removeItem: (id) => {},
  clearCart: () => {}, // Added for bonus task
});

// Cart Provider component
export const CartProvider = (props) => {
  // useReducer hook to manage cart state
  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);

  // Action dispatchers
  const addItemToCartHandler = (item) => {
    dispatchCartAction({ type: 'ADD_ITEM', item: item });
  };

  const removeItemFromCartHandler = (id) => {
    dispatchCartAction({ type: 'REMOVE_ITEM', id: id });
  };

  const clearCartHandler = () => {
    dispatchCartAction({ type: 'CLEAR_CART' });
  };

  // Context value to be provided to consumers
  const cartContext = {
    items: cartState.items,
    totalAmount: cartState.totalAmount,
    addItem: addItemToCartHandler,
    removeItem: removeItemFromCartHandler,
    clearCart: clearCartHandler,
  };

  return (
    <CartContext.Provider value={cartContext}>
      {props.children}
    </CartContext.Provider>
  );
};
